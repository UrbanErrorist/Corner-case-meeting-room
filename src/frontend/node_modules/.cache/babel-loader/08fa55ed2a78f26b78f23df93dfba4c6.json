{"ast":null,"code":"\"use strict\";\n\nvar assign = require(\"../object/assign\"),\n    isObject = require(\"../object/is-object\"),\n    isValue = require(\"../object/is-value\"),\n    captureStackTrace = Error.captureStackTrace;\n\nmodule.exports = function (message\n/*, code, ext*/\n) {\n  var err = new Error(message),\n      code = arguments[1],\n      ext = arguments[2];\n\n  if (!isValue(ext)) {\n    if (isObject(code)) {\n      ext = code;\n      code = null;\n    }\n  }\n\n  if (isValue(ext)) assign(err, ext);\n  if (isValue(code)) err.code = code;\n  if (captureStackTrace) captureStackTrace(err, module.exports);\n  return err;\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/es5-ext/error/custom.js"],"names":["assign","require","isObject","isValue","captureStackTrace","Error","module","exports","message","err","code","arguments","ext"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAcC,OAAO,CAAC,kBAAD,CAA/B;AAAA,IACIC,QAAQ,GAAYD,OAAO,CAAC,qBAAD,CAD/B;AAAA,IAEIE,OAAO,GAAaF,OAAO,CAAC,oBAAD,CAF/B;AAAA,IAGIG,iBAAiB,GAAGC,KAAK,CAACD,iBAH9B;;AAKAE,MAAM,CAACC,OAAP,GAAiB,UAAUC;AAAO;AAAjB,EAAkC;AAClD,MAAIC,GAAG,GAAG,IAAIJ,KAAJ,CAAUG,OAAV,CAAV;AAAA,MAA8BE,IAAI,GAAGC,SAAS,CAAC,CAAD,CAA9C;AAAA,MAAmDC,GAAG,GAAGD,SAAS,CAAC,CAAD,CAAlE;;AACA,MAAI,CAACR,OAAO,CAACS,GAAD,CAAZ,EAAmB;AAClB,QAAIV,QAAQ,CAACQ,IAAD,CAAZ,EAAoB;AACnBE,MAAAA,GAAG,GAAGF,IAAN;AACAA,MAAAA,IAAI,GAAG,IAAP;AACA;AACD;;AACD,MAAIP,OAAO,CAACS,GAAD,CAAX,EAAkBZ,MAAM,CAACS,GAAD,EAAMG,GAAN,CAAN;AAClB,MAAIT,OAAO,CAACO,IAAD,CAAX,EAAmBD,GAAG,CAACC,IAAJ,GAAWA,IAAX;AACnB,MAAIN,iBAAJ,EAAuBA,iBAAiB,CAACK,GAAD,EAAMH,MAAM,CAACC,OAAb,CAAjB;AACvB,SAAOE,GAAP;AACA,CAZD","sourcesContent":["\"use strict\";\n\nvar assign            = require(\"../object/assign\")\n  , isObject          = require(\"../object/is-object\")\n  , isValue           = require(\"../object/is-value\")\n  , captureStackTrace = Error.captureStackTrace;\n\nmodule.exports = function (message/*, code, ext*/) {\n\tvar err = new Error(message), code = arguments[1], ext = arguments[2];\n\tif (!isValue(ext)) {\n\t\tif (isObject(code)) {\n\t\t\text = code;\n\t\t\tcode = null;\n\t\t}\n\t}\n\tif (isValue(ext)) assign(err, ext);\n\tif (isValue(code)) err.code = code;\n\tif (captureStackTrace) captureStackTrace(err, module.exports);\n\treturn err;\n};\n"]},"metadata":{},"sourceType":"script"}