{"ast":null,"code":"'use strict';\n/**\n * Local dependencies\n */\n\nvar Ruler = require('./ruler');\n/**\n * Core parser `rules`\n */\n\n\nvar _rules = [['block', require('./rules_core/block')], ['abbr', require('./rules_core/abbr')], ['references', require('./rules_core/references')], ['inline', require('./rules_core/inline')], ['footnote_tail', require('./rules_core/footnote_tail')], ['abbr2', require('./rules_core/abbr2')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], ['linkify', require('./rules_core/linkify')]];\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n/**\n * Expose `Core`\n */\n\n\nmodule.exports = Core;","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/remarkable/lib/parser_core.js"],"names":["Ruler","require","_rules","Core","options","ruler","i","length","push","prototype","process","state","l","rules","getRules","module","exports"],"mappings":"AAAA;AAEA;;;;AAIA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;AAEA;;;;;AAIA,IAAIC,MAAM,GAAG,CACX,CAAE,OAAF,EAAoBD,OAAO,CAAC,oBAAD,CAA3B,CADW,EAEX,CAAE,MAAF,EAAoBA,OAAO,CAAC,mBAAD,CAA3B,CAFW,EAGX,CAAE,YAAF,EAAoBA,OAAO,CAAC,yBAAD,CAA3B,CAHW,EAIX,CAAE,QAAF,EAAoBA,OAAO,CAAC,qBAAD,CAA3B,CAJW,EAKX,CAAE,eAAF,EAAoBA,OAAO,CAAC,4BAAD,CAA3B,CALW,EAMX,CAAE,OAAF,EAAoBA,OAAO,CAAC,oBAAD,CAA3B,CANW,EAOX,CAAE,cAAF,EAAoBA,OAAO,CAAC,2BAAD,CAA3B,CAPW,EAQX,CAAE,aAAF,EAAoBA,OAAO,CAAC,0BAAD,CAA3B,CARW,EASX,CAAE,SAAF,EAAoBA,OAAO,CAAC,sBAAD,CAA3B,CATW,CAAb;AAYA;;;;;;AAMA,SAASE,IAAT,GAAgB;AACd,OAAKC,OAAL,GAAe,EAAf;AACA,OAAKC,KAAL,GAAa,IAAIL,KAAJ,EAAb;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,SAAKD,KAAL,CAAWG,IAAX,CAAgBN,MAAM,CAACI,CAAD,CAAN,CAAU,CAAV,CAAhB,EAA8BJ,MAAM,CAACI,CAAD,CAAN,CAAU,CAAV,CAA9B;AACD;AACF;AAED;;;;;;;;AAOAH,IAAI,CAACM,SAAL,CAAeC,OAAf,GAAyB,UAAUC,KAAV,EAAiB;AACxC,MAAIL,CAAJ,EAAOM,CAAP,EAAUC,KAAV;AACAA,EAAAA,KAAK,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoB,EAApB,CAAR;;AACA,OAAKR,CAAC,GAAG,CAAJ,EAAOM,CAAC,GAAGC,KAAK,CAACN,MAAtB,EAA8BD,CAAC,GAAGM,CAAlC,EAAqCN,CAAC,EAAtC,EAA0C;AACxCO,IAAAA,KAAK,CAACP,CAAD,CAAL,CAASK,KAAT;AACD;AACF,CAND;AAQA;;;;;AAIAI,MAAM,CAACC,OAAP,GAAiBb,IAAjB","sourcesContent":["'use strict';\n\n/**\n * Local dependencies\n */\n\nvar Ruler = require('./ruler');\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'abbr',           require('./rules_core/abbr')           ],\n  [ 'references',     require('./rules_core/references')     ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'footnote_tail',  require('./rules_core/footnote_tail')  ],\n  [ 'abbr2',          require('./rules_core/abbr2')          ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  [ 'linkify',        require('./rules_core/linkify')        ]\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n/**\n * Expose `Core`\n */\n\nmodule.exports = Core;\n"]},"metadata":{},"sourceType":"script"}