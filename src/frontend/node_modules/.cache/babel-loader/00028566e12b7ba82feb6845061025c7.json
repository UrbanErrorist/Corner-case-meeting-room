{"ast":null,"code":"exports.reactLocalStorage = {\n  set: function set(key, value) {\n    localStorage[key] = value;\n    return localStorage[key];\n  },\n  get: function get(key) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var value = localStorage[key] || defaultValue; // if silent=false throw error\n\n    if (!silent && !value) throw key + \" not found in localStorage\";\n    return value;\n  },\n  setObject: function setObject(key, value) {\n    localStorage[key] = JSON.stringify(value);\n    return localStorage[key];\n  },\n  getObject: function getObject(key) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    value = this.get(key, JSON.stringify(defaultValue), silent);\n\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      // will raise error for parsing\n      if (!silent) throw 'Error in parsing value';\n    }\n  },\n  clear: function clear() {\n    return localStorage.clear();\n  },\n  remove: function remove(key) {\n    return localStorage.removeItem(key);\n  }\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/reactjs-localstorage/react-localstorage.js"],"names":["exports","reactLocalStorage","set","key","value","localStorage","get","defaultValue","undefined","silent","setObject","JSON","stringify","getObject","parse","e","clear","remove","removeItem"],"mappings":"AAAAA,OAAO,CAACC,iBAAR,GAA4B;AACxBC,EAAAA,GAAG,EAAE,aAASC,GAAT,EAAcC,KAAd,EAAqB;AACtBC,IAAAA,YAAY,CAACF,GAAD,CAAZ,GAAoBC,KAApB;AACA,WAAOC,YAAY,CAACF,GAAD,CAAnB;AACH,GAJuB;AAKxBG,EAAAA,GAAG,EAAE,aAASH,GAAT,EAAmD;AAAA,QAArCI,YAAqC,uEAAxBC,SAAwB;AAAA,QAAbC,MAAa,uEAAN,IAAM;AACpD,QAAIL,KAAK,GAAGC,YAAY,CAACF,GAAD,CAAZ,IAAqBI,YAAjC,CADoD,CAGpD;;AACA,QAAG,CAACE,MAAD,IAAW,CAACL,KAAf,EACI,MAAMD,GAAG,GAAG,4BAAZ;AAEJ,WAAOC,KAAP;AACH,GAbuB;AAcxBM,EAAAA,SAAS,EAAE,mBAASP,GAAT,EAAcC,KAAd,EAAqB;AAC5BC,IAAAA,YAAY,CAACF,GAAD,CAAZ,GAAoBQ,IAAI,CAACC,SAAL,CAAeR,KAAf,CAApB;AACA,WAAOC,YAAY,CAACF,GAAD,CAAnB;AACH,GAjBuB;AAkBxBU,EAAAA,SAAS,EAAE,mBAASV,GAAT,EAA4C;AAAA,QAA9BI,YAA8B,uEAAjB,EAAiB;AAAA,QAAbE,MAAa,uEAAN,IAAM;AACnDL,IAAAA,KAAK,GAAG,KAAKE,GAAL,CAASH,GAAT,EAAcQ,IAAI,CAACC,SAAL,CAAeL,YAAf,CAAd,EAA4CE,MAA5C,CAAR;;AAEA,QAAG;AACC,aAAOE,IAAI,CAACG,KAAL,CAAWV,KAAX,CAAP;AACH,KAFD,CAEE,OAAMW,CAAN,EAAS;AACP;AACA,UAAG,CAACN,MAAJ,EACI,MAAM,wBAAN;AACP;AACJ,GA5BuB;AA6BxBO,EAAAA,KAAK,EAAE,iBAAW;AACd,WAAOX,YAAY,CAACW,KAAb,EAAP;AACH,GA/BuB;AAgCxBC,EAAAA,MAAM,EAAE,gBAASd,GAAT,EAAc;AAClB,WAAOE,YAAY,CAACa,UAAb,CAAwBf,GAAxB,CAAP;AACH;AAlCuB,CAA5B","sourcesContent":["exports.reactLocalStorage = {\n    set: function(key, value) {\n        localStorage[key] = value;\n        return localStorage[key];\n    },\n    get: function(key, defaultValue=undefined, silent=true) {\n        var value = localStorage[key] || defaultValue;\n\n        // if silent=false throw error\n        if(!silent && !value)\n            throw key + \" not found in localStorage\";\n\n        return value;\n    },\n    setObject: function(key, value) {\n        localStorage[key] = JSON.stringify(value);\n        return localStorage[key];\n    },\n    getObject: function(key, defaultValue={}, silent=true) {\n        value = this.get(key, JSON.stringify(defaultValue), silent);\n\n        try{\n            return JSON.parse(value);\n        } catch(e) {\n            // will raise error for parsing\n            if(!silent)\n                throw 'Error in parsing value'\n        }\n    },\n    clear: function() {\n        return localStorage.clear();\n    },\n    remove: function(key) {\n        return localStorage.removeItem(key);\n    },\n}\n"]},"metadata":{},"sourceType":"script"}