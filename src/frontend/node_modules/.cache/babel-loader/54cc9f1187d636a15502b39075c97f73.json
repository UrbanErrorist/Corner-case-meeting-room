{"ast":null,"code":"// Process autolinks '<protocol:...>'\n'use strict';\n\nvar url_schemas = require('../common/url_schemas');\n\nvar normalizeLink = require('../helpers/normalize_link');\n/*eslint max-len:0*/\n\n\nvar EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\nmodule.exports = function autolink(state, silent) {\n  var tail,\n      linkMatch,\n      emailMatch,\n      url,\n      fullUrl,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) {\n    return false;\n  }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) {\n      return false;\n    }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n\n    if (!state.parser.validateLink(url)) {\n      return false;\n    }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({\n        type: 'link_close',\n        level: state.level\n      });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = normalizeLink('mailto:' + url);\n\n    if (!state.parser.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({\n        type: 'link_close',\n        level: state.level\n      });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/blackhat/Desktop/testingRoom/src/frontend/node_modules/remarkable/lib/rules_inline/autolink.js"],"names":["url_schemas","require","normalizeLink","EMAIL_RE","AUTOLINK_RE","module","exports","autolink","state","silent","tail","linkMatch","emailMatch","url","fullUrl","pos","src","charCodeAt","slice","indexOf","match","toLowerCase","parser","validateLink","push","type","href","level","content","length"],"mappings":"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","sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\nvar url_schemas   = require('../common/url_schemas');\nvar normalizeLink = require('../helpers/normalize_link');\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n"]},"metadata":{},"sourceType":"script"}