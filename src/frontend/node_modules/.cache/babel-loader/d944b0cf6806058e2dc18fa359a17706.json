{"ast":null,"code":"'use strict';\n\nmodule.exports = function footnote_block(state) {\n  var i,\n      l,\n      j,\n      t,\n      lastParagraph,\n      list,\n      tokens,\n      current,\n      currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) {\n    return;\n  }\n\n  state.tokens = state.tokens.filter(function (tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false; // prepend ':' to avoid conflict with Object.prototype members\n\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n\n    if (insideRef) {\n      current.push(tok);\n    }\n\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) {\n    return;\n  }\n\n  list = state.env.footnotes.list;\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n};","map":{"version":3,"sources":["/Users/blackhat/Desktop/testingRoom/src/frontend/node_modules/remarkable/lib/rules_core/footnote_tail.js"],"names":["module","exports","footnote_block","state","i","l","j","t","lastParagraph","list","tokens","current","currentLabel","level","insideRef","refTokens","env","footnotes","filter","tok","type","label","push","length","id","tight","content","children","concat","pop","count","subId"],"mappings":"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","sourcesContent":["'use strict';\n\n\nmodule.exports = function footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n};\n"]},"metadata":{},"sourceType":"script"}