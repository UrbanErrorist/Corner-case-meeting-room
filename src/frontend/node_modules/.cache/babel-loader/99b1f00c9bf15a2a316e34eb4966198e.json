{"ast":null,"code":"\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\");\n\nmodule.exports = function () {\n  var lastId = 0,\n      argsMap = [],\n      cache = [];\n  return {\n    get: function (args) {\n      var index = indexOf.call(argsMap, args[0]);\n      return index === -1 ? null : cache[index];\n    },\n    set: function (args) {\n      argsMap.push(args[0]);\n      cache.push(++lastId);\n      return lastId;\n    },\n    delete: function (id) {\n      var index = indexOf.call(cache, id);\n\n      if (index !== -1) {\n        argsMap.splice(index, 1);\n        cache.splice(index, 1);\n      }\n    },\n    clear: function () {\n      argsMap = [];\n      cache = [];\n    }\n  };\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/memoizee/normalizers/get-1.js"],"names":["indexOf","require","module","exports","lastId","argsMap","cache","get","args","index","call","set","push","delete","id","splice","clear"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,4BAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC5B,MAAIC,MAAM,GAAG,CAAb;AAAA,MAAgBC,OAAO,GAAG,EAA1B;AAAA,MAA8BC,KAAK,GAAG,EAAtC;AACA,SAAO;AACNC,IAAAA,GAAG,EAAE,UAAUC,IAAV,EAAgB;AACpB,UAAIC,KAAK,GAAGT,OAAO,CAACU,IAAR,CAAaL,OAAb,EAAsBG,IAAI,CAAC,CAAD,CAA1B,CAAZ;AACA,aAAOC,KAAK,KAAK,CAAC,CAAX,GAAe,IAAf,GAAsBH,KAAK,CAACG,KAAD,CAAlC;AACA,KAJK;AAKNE,IAAAA,GAAG,EAAE,UAAUH,IAAV,EAAgB;AACpBH,MAAAA,OAAO,CAACO,IAAR,CAAaJ,IAAI,CAAC,CAAD,CAAjB;AACAF,MAAAA,KAAK,CAACM,IAAN,CAAW,EAAER,MAAb;AACA,aAAOA,MAAP;AACA,KATK;AAUNS,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACrB,UAAIL,KAAK,GAAGT,OAAO,CAACU,IAAR,CAAaJ,KAAb,EAAoBQ,EAApB,CAAZ;;AACA,UAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACjBJ,QAAAA,OAAO,CAACU,MAAR,CAAeN,KAAf,EAAsB,CAAtB;AACAH,QAAAA,KAAK,CAACS,MAAN,CAAaN,KAAb,EAAoB,CAApB;AACA;AACD,KAhBK;AAiBNO,IAAAA,KAAK,EAAE,YAAY;AAClBX,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,KAAK,GAAG,EAAR;AACA;AApBK,GAAP;AAsBA,CAxBD","sourcesContent":["\"use strict\";\n\nvar indexOf = require(\"es5-ext/array/#/e-index-of\");\n\nmodule.exports = function () {\n\tvar lastId = 0, argsMap = [], cache = [];\n\treturn {\n\t\tget: function (args) {\n\t\t\tvar index = indexOf.call(argsMap, args[0]);\n\t\t\treturn index === -1 ? null : cache[index];\n\t\t},\n\t\tset: function (args) {\n\t\t\targsMap.push(args[0]);\n\t\t\tcache.push(++lastId);\n\t\t\treturn lastId;\n\t\t},\n\t\tdelete: function (id) {\n\t\t\tvar index = indexOf.call(cache, id);\n\t\t\tif (index !== -1) {\n\t\t\t\targsMap.splice(index, 1);\n\t\t\t\tcache.splice(index, 1);\n\t\t\t}\n\t\t},\n\t\tclear: function () {\n\t\t\targsMap = [];\n\t\t\tcache = [];\n\t\t}\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}