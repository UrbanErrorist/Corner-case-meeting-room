{"ast":null,"code":"// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  return true;\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/remarkable/lib/rules_block/code.js"],"names":["module","exports","code","state","startLine","endLine","nextLine","last","tShift","blkIndent","isEmpty","line","tokens","push","type","content","getLines","block","lines","level"],"mappings":"AAAA;AAEA;;AAGAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,KAAd,EAAqBC,SAArB,EAAgCC;AAAO;AAAvC,EAAqD;AACpE,MAAIC,QAAJ,EAAcC,IAAd;;AAEA,MAAIJ,KAAK,CAACK,MAAN,CAAaJ,SAAb,IAA0BD,KAAK,CAACM,SAAhC,GAA4C,CAAhD,EAAmD;AAAE,WAAO,KAAP;AAAe;;AAEpEF,EAAAA,IAAI,GAAGD,QAAQ,GAAGF,SAAS,GAAG,CAA9B;;AAEA,SAAOE,QAAQ,GAAGD,OAAlB,EAA2B;AACzB,QAAIF,KAAK,CAACO,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AAC3BA,MAAAA,QAAQ;AACR;AACD;;AACD,QAAIH,KAAK,CAACK,MAAN,CAAaF,QAAb,IAAyBH,KAAK,CAACM,SAA/B,IAA4C,CAAhD,EAAmD;AACjDH,MAAAA,QAAQ;AACRC,MAAAA,IAAI,GAAGD,QAAP;AACA;AACD;;AACD;AACD;;AAEDH,EAAAA,KAAK,CAACQ,IAAN,GAAaL,QAAb;AACAH,EAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAE,MADU;AAEhBC,IAAAA,OAAO,EAAEZ,KAAK,CAACa,QAAN,CAAeZ,SAAf,EAA0BG,IAA1B,EAAgC,IAAIJ,KAAK,CAACM,SAA1C,EAAqD,IAArD,CAFO;AAGhBQ,IAAAA,KAAK,EAAE,IAHS;AAIhBC,IAAAA,KAAK,EAAE,CAAEd,SAAF,EAAaD,KAAK,CAACQ,IAAnB,CAJS;AAKhBQ,IAAAA,KAAK,EAAEhB,KAAK,CAACgB;AALG,GAAlB;AAQA,SAAO,IAAP;AACD,CA9BD","sourcesContent":["// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"script"}