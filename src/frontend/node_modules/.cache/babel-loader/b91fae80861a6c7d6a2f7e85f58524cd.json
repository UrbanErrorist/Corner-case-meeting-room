{"ast":null,"code":"// Horizontal rule\n'use strict';\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n  pos += state.tShift[startLine];\n\n  if (pos > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 one\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && ch !== 0x20\n    /* space */\n    ) {\n        return false;\n      }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  return true;\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/remarkable/lib/rules_block/hr.js"],"names":["module","exports","hr","state","startLine","endLine","silent","marker","cnt","ch","pos","bMarks","max","eMarks","tShift","src","charCodeAt","line","tokens","push","type","lines","level"],"mappings":"AAAA;AAEA;;AAGAA,MAAM,CAACC,OAAP,GAAiB,SAASC,EAAT,CAAYC,KAAZ,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+C;AAC9D,MAAIC,MAAJ;AAAA,MAAYC,GAAZ;AAAA,MAAiBC,EAAjB;AAAA,MACIC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAaP,SAAb,CADV;AAAA,MAEIQ,GAAG,GAAGT,KAAK,CAACU,MAAN,CAAaT,SAAb,CAFV;AAIAM,EAAAA,GAAG,IAAIP,KAAK,CAACW,MAAN,CAAaV,SAAb,CAAP;;AAEA,MAAIM,GAAG,GAAGE,GAAV,EAAe;AAAE,WAAO,KAAP;AAAe;;AAEhCL,EAAAA,MAAM,GAAGJ,KAAK,CAACY,GAAN,CAAUC,UAAV,CAAqBN,GAAG,EAAxB,CAAT,CAT8D,CAW9D;;AACA,MAAIH,MAAM,KAAK;AAAI;AAAf,KACAA,MAAM,KAAK;AAAI;AADf,KAEAA,MAAM,KAAK;AAAI;AAFnB,IAE4B;AAC1B,aAAO,KAAP;AACD,KAhB6D,CAkB9D;;;AAEAC,EAAAA,GAAG,GAAG,CAAN;;AACA,SAAOE,GAAG,GAAGE,GAAb,EAAkB;AAChBH,IAAAA,EAAE,GAAGN,KAAK,CAACY,GAAN,CAAUC,UAAV,CAAqBN,GAAG,EAAxB,CAAL;;AACA,QAAID,EAAE,KAAKF,MAAP,IAAiBE,EAAE,KAAK;AAAI;AAAhC,MAA6C;AAAE,eAAO,KAAP;AAAe;;AAC9D,QAAIA,EAAE,KAAKF,MAAX,EAAmB;AAAEC,MAAAA,GAAG;AAAK;AAC9B;;AAED,MAAIA,GAAG,GAAG,CAAV,EAAa;AAAE,WAAO,KAAP;AAAe;;AAE9B,MAAIF,MAAJ,EAAY;AAAE,WAAO,IAAP;AAAc;;AAE5BH,EAAAA,KAAK,CAACc,IAAN,GAAab,SAAS,GAAG,CAAzB;AACAD,EAAAA,KAAK,CAACe,MAAN,CAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAE,IADU;AAEhBC,IAAAA,KAAK,EAAE,CAAEjB,SAAF,EAAaD,KAAK,CAACc,IAAnB,CAFS;AAGhBK,IAAAA,KAAK,EAAEnB,KAAK,CAACmB;AAHG,GAAlB;AAMA,SAAO,IAAP;AACD,CAvCD","sourcesContent":["// Horizontal rule\n\n'use strict';\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"script"}