{"ast":null,"code":"// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var marker,\n      pos,\n      max,\n      next = startLine + 1;\n\n  if (next >= endLine) {\n    return false;\n  }\n\n  if (state.tShift[next] < state.blkIndent) {\n    return false;\n  } // Scan next line\n\n\n  if (state.tShift[next] - state.blkIndent > 3) {\n    return false;\n  }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D\n  /* - */\n  && marker !== 0x3D\n  /* = */\n  ) {\n      return false;\n    }\n\n  pos = state.skipChars(pos, marker);\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) {\n    return false;\n  }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D\n    /* = */\n    ? 1 : 2,\n    lines: [startLine, state.line],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [startLine, state.line - 1],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D\n    /* = */\n    ? 1 : 2,\n    level: state.level\n  });\n  return true;\n};","map":{"version":3,"sources":["/Users/blackhat/TV Shows/Meeting Room/src/frontend/node_modules/remarkable/lib/rules_block/lheading.js"],"names":["module","exports","lheading","state","startLine","endLine","marker","pos","max","next","tShift","blkIndent","bMarks","eMarks","src","charCodeAt","skipChars","skipSpaces","line","tokens","push","type","hLevel","lines","level","content","slice","trim","children"],"mappings":"AAAA;AAEA;;AAGAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,SAAzB,EAAoCC;AAAO;AAA3C,EAAyD;AACxE,MAAIC,MAAJ;AAAA,MAAYC,GAAZ;AAAA,MAAiBC,GAAjB;AAAA,MACIC,IAAI,GAAGL,SAAS,GAAG,CADvB;;AAGA,MAAIK,IAAI,IAAIJ,OAAZ,EAAqB;AAAE,WAAO,KAAP;AAAe;;AACtC,MAAIF,KAAK,CAACO,MAAN,CAAaD,IAAb,IAAqBN,KAAK,CAACQ,SAA/B,EAA0C;AAAE,WAAO,KAAP;AAAe,GALa,CAOxE;;;AAEA,MAAIR,KAAK,CAACO,MAAN,CAAaD,IAAb,IAAqBN,KAAK,CAACQ,SAA3B,GAAuC,CAA3C,EAA8C;AAAE,WAAO,KAAP;AAAe;;AAE/DJ,EAAAA,GAAG,GAAGJ,KAAK,CAACS,MAAN,CAAaH,IAAb,IAAqBN,KAAK,CAACO,MAAN,CAAaD,IAAb,CAA3B;AACAD,EAAAA,GAAG,GAAGL,KAAK,CAACU,MAAN,CAAaJ,IAAb,CAAN;;AAEA,MAAIF,GAAG,IAAIC,GAAX,EAAgB;AAAE,WAAO,KAAP;AAAe;;AAEjCF,EAAAA,MAAM,GAAGH,KAAK,CAACW,GAAN,CAAUC,UAAV,CAAqBR,GAArB,CAAT;;AAEA,MAAID,MAAM,KAAK;AAAI;AAAf,KAA0BA,MAAM,KAAK;AAAI;AAA7C,IAAsD;AAAE,aAAO,KAAP;AAAe;;AAEvEC,EAAAA,GAAG,GAAGJ,KAAK,CAACa,SAAN,CAAgBT,GAAhB,EAAqBD,MAArB,CAAN;AAEAC,EAAAA,GAAG,GAAGJ,KAAK,CAACc,UAAN,CAAiBV,GAAjB,CAAN;;AAEA,MAAIA,GAAG,GAAGC,GAAV,EAAe;AAAE,WAAO,KAAP;AAAe;;AAEhCD,EAAAA,GAAG,GAAGJ,KAAK,CAACS,MAAN,CAAaR,SAAb,IAA0BD,KAAK,CAACO,MAAN,CAAaN,SAAb,CAAhC;AAEAD,EAAAA,KAAK,CAACe,IAAN,GAAaT,IAAI,GAAG,CAApB;AACAN,EAAAA,KAAK,CAACgB,MAAN,CAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAE,cADU;AAEhBC,IAAAA,MAAM,EAAEhB,MAAM,KAAK;AAAI;AAAf,MAAyB,CAAzB,GAA6B,CAFrB;AAGhBiB,IAAAA,KAAK,EAAE,CAAEnB,SAAF,EAAaD,KAAK,CAACe,IAAnB,CAHS;AAIhBM,IAAAA,KAAK,EAAErB,KAAK,CAACqB;AAJG,GAAlB;AAMArB,EAAAA,KAAK,CAACgB,MAAN,CAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAE,QADU;AAEhBI,IAAAA,OAAO,EAAEtB,KAAK,CAACW,GAAN,CAAUY,KAAV,CAAgBnB,GAAhB,EAAqBJ,KAAK,CAACU,MAAN,CAAaT,SAAb,CAArB,EAA8CuB,IAA9C,EAFO;AAGhBH,IAAAA,KAAK,EAAErB,KAAK,CAACqB,KAAN,GAAc,CAHL;AAIhBD,IAAAA,KAAK,EAAE,CAAEnB,SAAF,EAAaD,KAAK,CAACe,IAAN,GAAa,CAA1B,CAJS;AAKhBU,IAAAA,QAAQ,EAAE;AALM,GAAlB;AAOAzB,EAAAA,KAAK,CAACgB,MAAN,CAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAE,eADU;AAEhBC,IAAAA,MAAM,EAAEhB,MAAM,KAAK;AAAI;AAAf,MAAyB,CAAzB,GAA6B,CAFrB;AAGhBkB,IAAAA,KAAK,EAAErB,KAAK,CAACqB;AAHG,GAAlB;AAMA,SAAO,IAAP;AACD,CAjDD","sourcesContent":["// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n};\n"]},"metadata":{},"sourceType":"script"}