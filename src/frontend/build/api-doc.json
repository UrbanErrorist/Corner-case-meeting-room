{
  "swagger" : "2.0",
  "info" : {
    "description" : "Build for Corner Case Technologies",
    "version" : "1.0.0",
    "title" : "Corner Case Meeting Rooms API",
    "contact" : {
      "email" : "rish.xi@gmail.com"
    }
  },
  "tags" : [ {
    "name" : "Employees",
    "description" : "Operations available to Employees"
  }, {
    "name" : "Room Managers",
    "description" : "Operations available to Room Managers"
  }, {
    "name" : "Everyone",
    "description" : "Operations available to Everyone"
  }, {
    "name" : "Authenticated users",
    "description" : "Operations available to Authenticated Users"
  } ],
  "paths" : {
    "/profile" : {
      "get" : {
        "tags" : [ "Authenticated users" ],
        "summary" : "Gives the details of user",
        "operationId" : "getProfile",
        "description" : "Gives the details of user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of user",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          }
        }
      },
      "patch" : {
        "tags" : [ "Authenticated users" ],
        "summary" : "Updates given fields of user",
        "operationId" : "editProfile",
        "description" : "Updates given fields of user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User details to update",
          "schema" : {
            "$ref" : "#/definitions/UserUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "User updated",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "409" : {
            "description" : "An existing item already"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/signup" : {
      "post" : {
        "tags" : [ "Everyone" ],
        "summary" : "Creates a user",
        "operationId" : "signup",
        "description" : "Creates a user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User details to add",
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item created",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "409" : {
            "description" : "An existing item already"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/login" : {
      "post" : {
        "tags" : [ "Everyone" ],
        "summary" : "Logins in the user against given credentials and returns a token to use for further authentication.",
        "operationId" : "login",
        "description" : "Logins in the user against given credentials and returns a token to use for further authentication.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "User details to add",
          "schema" : {
            "$ref" : "#/definitions/UserLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item created",
            "schema" : {
              "type" : "object",
              "example" : {
                "token" : "<token>"
              }
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/rooms" : {
      "get" : {
        "tags" : [ "Room Managers", "Employees" ],
        "summary" : "Gives the details of rooms owned by room manager or all rooms for Employees",
        "operationId" : "getRooms",
        "description" : "Gives the details of rooms owned by user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of rooms",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Room"
              }
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          }
        }
      },
      "post" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Create a new room",
        "operationId" : "createRoom",
        "description" : "Creates a new room with giben details.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "User details to add",
          "schema" : {
            "$ref" : "#/definitions/RoomCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item created",
            "schema" : {
              "$ref" : "#/definitions/Room"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/rooms/{roomId}" : {
      "get" : {
        "tags" : [ "Room Managers", "Employees" ],
        "summary" : "Gives the details of room",
        "operationId" : "getRoom",
        "description" : "Gives the details of room",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "roomId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of user",
            "schema" : {
              "$ref" : "#/definitions/Room"
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "patch" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Updates given fields of room",
        "operationId" : "editRoom",
        "description" : "Updates given fields of room",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "roomId"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "User details to update",
          "schema" : {
            "$ref" : "#/definitions/RoomUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Room updated",
            "schema" : {
              "$ref" : "#/definitions/Room"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "409" : {
            "description" : "An existing item already"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Deletes the given room",
        "operationId" : "delRoom",
        "description" : "Deletes the given room",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "roomId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Room Deleted"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/timeslots" : {
      "get" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Gives the details of timeslots of rooms owned by user",
        "operationId" : "getTimeslots",
        "description" : "Gives the details of timeslots of rooms owned by user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "query",
          "type" : "number",
          "name" : "room_id",
          "description" : "Room ID of timeslots"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of timeslots",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TimeSlot"
              }
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          }
        }
      },
      "post" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Create a new timeslot",
        "operationId" : "createTimeslot",
        "description" : "Creates a new room with given details.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "User details to add",
          "schema" : {
            "$ref" : "#/definitions/TimeSlotCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item created",
            "schema" : {
              "$ref" : "#/definitions/TimeSlot"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/timeslots/{slotId}" : {
      "get" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Gives the details of timeslot",
        "operationId" : "getTimeslot",
        "description" : "Gives the details of timeslot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "slotId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of timeslot",
            "schema" : {
              "$ref" : "#/definitions/TimeSlot"
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Room Managers" ],
        "summary" : "Deletes the given timeslot",
        "operationId" : "delTimeSlot",
        "description" : "Deletes the given timeslot",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "slotId"
        } ],
        "responses" : {
          "204" : {
            "description" : "TimeSlot Deleted"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/bookings" : {
      "get" : {
        "tags" : [ "Employees", "Room Managers" ],
        "summary" : "Gives the details of bookings associated with user",
        "operationId" : "getBookings",
        "description" : "Gives the details of bookings associated with user",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of bookings",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Booking"
              }
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          }
        }
      },
      "post" : {
        "tags" : [ "Employees" ],
        "summary" : "Create a new booking",
        "operationId" : "createBooking",
        "description" : "Creates a new booking on given date and time slot.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "User details to add",
          "schema" : {
            "$ref" : "#/definitions/BookingCreate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item created",
            "schema" : {
              "$ref" : "#/definitions/Booking"
            }
          },
          "400" : {
            "description" : "Invalid input, object invalid"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/bookings/{bookId}" : {
      "get" : {
        "tags" : [ "Employees", "Room Managers" ],
        "summary" : "Gives the details of booking",
        "operationId" : "getBooking",
        "description" : "Gives the details of booking",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "bookId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of booking",
            "schema" : {
              "$ref" : "#/definitions/Booking"
            }
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Employees" ],
        "summary" : "Deletes the given booking",
        "operationId" : "delBooking",
        "description" : "Deletes the given booking",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "header",
          "type" : "string",
          "name" : "Authorization",
          "description" : "token <token>"
        }, {
          "in" : "path",
          "required" : true,
          "type" : "number",
          "name" : "bookId"
        } ],
        "responses" : {
          "204" : {
            "description" : "Booking Deleted"
          },
          "401" : {
            "description" : "Authentication credentials not provided (in header)"
          },
          "403" : {
            "description" : "Invalid authentication credentials, not allowed"
          },
          "404" : {
            "description" : "Room with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "required" : [ "username", "email", "first_name", "last_name", "password", "is_customer", "is_room_manager" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "user11"
        },
        "email" : {
          "type" : "string",
          "example" : "info@example.com"
        },
        "first_name" : {
          "type" : "string",
          "example" : "John"
        },
        "last_name" : {
          "type" : "string",
          "example" : "Doe"
        },
        "password" : {
          "type" : "string",
          "example" : "password"
        },
        "is_customer" : {
          "type" : "boolean",
          "example" : true
        },
        "is_room_manager" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "UserLogin" : {
      "type" : "object",
      "required" : [ "username", "password" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "user11"
        },
        "password" : {
          "type" : "string",
          "example" : "password"
        }
      }
    },
    "UserUpdate" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "user11"
        },
        "email" : {
          "type" : "string",
          "example" : "info@example.com"
        },
        "first_name" : {
          "type" : "string",
          "example" : "John"
        },
        "last_name" : {
          "type" : "string",
          "example" : "Doe"
        },
        "password" : {
          "type" : "string",
          "example" : "password"
        }
      }
    },
    "Room" : {
      "required" : [ "name", "num_days_in_adv" ],
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 1
        },
        "name" : {
          "type" : "string",
          "description" : "Name of th room",
          "example" : "Hotel Taj Room"
        },
        "num_days_in_adv" : {
          "type" : "number",
          "description" : "Maximum No. of days in advance a customer can book room",
          "example" : 5
        },
        "owner" : {
          "$ref" : "#/definitions/User"
        },
        "time_slots" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeSlotOnlyBook"
          }
        }
      }
    },
    "RoomOnly" : {
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 1
        },
        "name" : {
          "type" : "string",
          "description" : "Name of th room",
          "example" : "Hotel Taj Room"
        },
        "num_days_in_adv" : {
          "type" : "number",
          "description" : "Maximum No. of days in advance a customer can book room",
          "example" : 5
        },
        "owner" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "RoomCreate" : {
      "required" : [ "name", "num_days_in_adv" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of th room",
          "example" : "Hotel Taj Room"
        },
        "num_days_in_adv" : {
          "type" : "number",
          "description" : "Maximum No. of days in advance a customer can book room",
          "example" : 5
        }
      }
    },
    "RoomUpdate" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of th room",
          "example" : "Hotel Taj Room"
        },
        "num_days_in_adv" : {
          "type" : "number",
          "description" : "Maximum No. of days in advance a customer can book room",
          "example" : 5
        }
      }
    },
    "TimeSlotCreate" : {
      "required" : [ "time_from", "time_to", "room_id" ],
      "properties" : {
        "time_from" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "15:30"
        },
        "time_to" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "18:30"
        },
        "room_id" : {
          "type" : "number",
          "example" : 11
        }
      }
    },
    "TimeSlot" : {
      "properties" : {
        "time_from" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "15:30"
        },
        "time_to" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "18:30"
        },
        "room_id" : {
          "$ref" : "#/definitions/RoomOnly"
        },
        "bookings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BookingOnly"
          }
        }
      }
    },
    "TimeSlotOnlyRoom" : {
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 1
        },
        "time_from" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "15:30"
        },
        "time_to" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "18:30"
        },
        "room_id" : {
          "$ref" : "#/definitions/RoomOnly"
        }
      }
    },
    "TimeSlotOnlyBook" : {
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 1
        },
        "time_from" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "15:30"
        },
        "time_to" : {
          "type" : "string",
          "format" : "hh:mm",
          "example" : "18:30"
        },
        "bookings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BookingOnly"
          }
        }
      }
    },
    "Booking" : {
      "properties" : {
        "id" : {
          "type" : "number",
          "example" : 1
        },
        "time_slot" : {
          "$ref" : "#/definitions/TimeSlotOnlyRoom"
        },
        "date" : {
          "type" : "string",
          "format" : "yyyy-mm-dd",
          "example" : "2020-03-15"
        },
        "customer" : {
          "type" : "number",
          "example" : 2
        }
      }
    },
    "BookingOnly" : {
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "yyyy-mm-dd",
          "example" : "2020-03-15"
        }
      }
    },
    "BookingCreate" : {
      "required" : [ "date", "time_slot" ],
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "yyyy-mm-dd",
          "example" : "2020-03-15"
        },
        "time_slot" : {
          "type" : "number",
          "example" : 31
        }
      }
    }
  },
  "host" : "localhost:8000",
  "basePath" : "/",
  "schemes" : [ "http" ]
}